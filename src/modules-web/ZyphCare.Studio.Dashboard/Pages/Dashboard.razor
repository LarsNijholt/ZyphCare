@page "/"
@using System.Security.Claims
@using Microsoft.AspNet.Identity
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using Syncfusion.Blazor.Buttons
@using ZyphCare.Web.Core.Constants
@using ZyphCare.Web.Identity.Contracts
@using Syncfusion.Blazor.Layouts
@using ZyphCare.Api.Client.Users.Contracts
@using ZyphCare.Api.Client.Users.Requests.Users
@using ZyphCare.Studio.Dashboard.Components
@using ZyphCare.Web.Core.Contracts

@attribute [Authorize]

<SfDashboardLayout CellSpacing="@(new double[] { 20, 20 })" Columns="5" MediaQuery="max-width:700px">
    <DashboardLayoutPanels>
        <DashboardLayoutPanel>
            <ContentTemplate>
                <div>
                    <SfButton @onclick="LogOut">LogOut</SfButton>
                </div>
            </ContentTemplate>
        </DashboardLayoutPanel>
        <DashboardLayoutPanel SizeX=2 SizeY=2 Column=1>
            <ContentTemplate>
                <div>1</div>
            </ContentTemplate>
        </DashboardLayoutPanel>
        <DashboardLayoutPanel SizeY=2 Column=3>
            <ContentTemplate>
                <div>2</div>
            </ContentTemplate>
        </DashboardLayoutPanel>
        <DashboardLayoutPanel Row=1>
            <ContentTemplate>
                <div>3</div>
            </ContentTemplate>
        </DashboardLayoutPanel>
    </DashboardLayoutPanels>
</SfDashboardLayout>

<style>
    .e-panel-content {
        text-align: center;
        margin-top: 10px;
    }
</style>

@code{
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;
    [Inject] private IBackendApiClientProvider ApiClientProvider { get; set; } = default!;
    [Inject] private IJwtAccessor JwtAccessor { get; set; } = default!;
    [Inject] private IAuthenticationProvider AuthenticationProvider { get; set; } = default!;
    [Inject] private IDialogService DialogService { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        
    }

    /// <inheritdoc />
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (AuthenticationState == null)
                return;

            var state = await AuthenticationState;
            var role = state.User.Identities.First().FindFirstValue(ClaimTypes.Role);

            if (!string.IsNullOrEmpty(role))
                return;

            var refreshToken = await JwtAccessor.ReadTokenAsync(TokenNames.RefreshToken);

            if (string.IsNullOrEmpty(refreshToken))
                return;

            var accessToken = await AuthenticationProvider.GetAccessTokenByRefreshTokenAsync(refreshToken);

            if (!string.IsNullOrEmpty(accessToken))
            {
                await JwtAccessor.WriteTokenAsync(TokenNames.AccessToken, accessToken);
            }

            var options = new DialogOptions
                {
                    BackdropClick = false,
                    CloseOnEscapeKey = false,
                    FullScreen = true
                };

            var dialog = await DialogService.ShowAsync<SignUpDialog>("Sign Up", options);
            var result = await dialog.Result;
            if (result?.Data is PostUserRequest postUserRequest)
            {
                if (AuthenticationState == null)
                    return;
                
                postUserRequest.Auth0Id = state.User.Identities.First().FindFirstValue("sub");
                var userApi = await ApiClientProvider.GetApiAsync<IUserApi>(CancellationToken.None);
                await userApi.PostAsync(postUserRequest, CancellationToken.None);
            }
        }
       
    }

    private async Task LogOut()
    {
        await JwtAccessor.RemoveTokenAsync(TokenNames.AccessToken);
        await JwtAccessor.RemoveTokenAsync(TokenNames.RefreshToken);
        NavigationManager.NavigateTo("https://dev-g2gar2vb3zazyj0s.us.auth0.com/v2/logout?client_id=uYjZgtRicwlVkRR6WW9N3DqHw8C7EmAT&returnTo=https://localhost:7184/SignIn");
    }

}